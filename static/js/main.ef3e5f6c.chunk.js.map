{"version":3,"sources":["components/EmployeeItem/index.js","components/SortName/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js","employee_seed.js"],"names":["EmployeeItem","props","this","className","alt","name","src","image","phone","href","email","dob","Component","FontAwesome","require","SortName","status","size","style","color","Wrapper","children","Title","id","employeesOriginal","populateTab","App","state","employees","searchParam","sortColumn","handleSort","event","str","target","innerHTML","sortColumnName","slice","search","toLowerCase","indexOf","sortState","searchP","sort","a","b","document","querySelector","value","setState","handleSearch","length","filter","employee","type","placeholder","onChange","onClick","map","i","employeeId","key","ReactDOM","render","getElementById","faker","moment","module","exports","push","findName","internet","phoneNumberFormat","set","get","Math","floor","random","format"],"mappings":"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","file":"static/js/main.ef3e5f6c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass EmployeeItem extends Component {\n\n  render() {\n    let props = this.props;\n    return (\n      <tr>\n        <td className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n        </td>\n        <td>{props.name}</td>\n        <td>{props.phone}</td>\n        {/* posibility to send email to employee */}\n        <td><a href={\"mailto:\"+props.email}>{props.email}</a></td>\n        <td>{props.dob}</td>\n      </tr>\n    );\n  }\n}\n\nexport default EmployeeItem;\n","import React from \"react\";\r\nimport \"./style.css\";\r\nvar FontAwesome = require('react-fontawesome');\r\n\r\nfunction SortName(props) {\r\n    if (props.status === 1) { return <span><FontAwesome name={\"sort-alpha-asc\"} size=\"lg\" style={{color:'green'}} /></span> }\r\n    else if (props.status === 2) { return <span><FontAwesome name={\"sort-alpha-desc\"} size=\"lg\" style={{color:'red'}} /></span> }\r\n    else if (props.status === 0){ return <span> </span> }\r\n}\r\n\r\nexport default SortName;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <div className=\"title\">\n  <h1>Employees Directory</h1>\n  <h4 id=\"textBlock\">Click on carrots to sort results by heading or use the seach box to narrow your search! </h4>\n  <figure>{props.children}</figure>\n  </div>\n}\n\nexport default Title;\n","import React, { Component, Fragment } from 'react';\nimport EmployeeItem from './components/EmployeeItem';\nimport SortName from './components/SortName';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\nimport populateTab from './employee_seed';\n// getting random employee records\nvar employeesOriginal = populateTab();\n\nclass App extends Component {\n  state = {\n    employees: employeesOriginal,\n    searchParam: \"\",\n    sortColumn: [0, 0, 0, 0]\n  }\n  // this function handles 4 categories sorting ascending, descending or no sorting\n  handleSort = event => {\n    let columnArr = [\"name\", \"phone\", \"email\", \"dob\"];\n    var str = event.target.innerHTML;\n    // based on event it finds name of the category\n    let sortColumnName = str.slice(0, str.search(\"<\") - 1).toLowerCase();\n    // then it retrieves category index\n    let sortColumn = columnArr.indexOf(sortColumnName);\n    // save state\n    if (!(sortColumn === -1)) {\n      let sortState = this.state.sortColumn;\n      let searchP = this.state.searchParam;\n      let employees = [];\n      // sorting up,down and default case\n      if (sortState[sortColumn] === 0) {\n        sortState = [0, 0, 0, 0];\n        employees = this.state.employees.sort((a, b) => (a[sortColumnName] > b[sortColumnName]) ? 1 : -1);\n        sortState[sortColumn] = 1;\n      } else if (sortState[sortColumn] === 1) {\n        sortState = [0, 0, 0, 0];\n        employees = this.state.employees.sort((a, b) => (a[sortColumnName] < b[sortColumnName]) ? 1 : -1);\n        sortState[sortColumn] = 2;\n      } else if (sortState[sortColumn] === 2) {\n        sortState = [0, 0, 0, 0];\n        employees = employeesOriginal;\n        searchP = \"\";\n        document.querySelector(\"input\").value = \"\";\n      }\n\n      this.setState({ employees: employees, sortColumn: sortState, searchParam: searchP });\n    }\n  }\n  // search filtering function. \n  handleSearch = event => {\n    var searchParam = event.target.value;\n    if (searchParam.length > 0) {\n      // it check for arrearance of some keys combination and checking it in 4 different categories\n      const employees = employeesOriginal.filter(employee =>\n        (employee.name.toLowerCase().indexOf(searchParam.toLowerCase()) >= 0) ||\n        (employee.email.toLowerCase().indexOf(searchParam.toLowerCase()) >= 0) ||\n        ((employee.phone.toLowerCase().indexOf(searchParam.toLowerCase()) >= 0)) ||\n        ((employee.dob.toLowerCase().indexOf(searchParam.toLowerCase()) >= 0)))\n      this.setState({ employees: employees, searchParam: searchParam })\n    }\n    else {\n      // if there is no records found it shows default values\n      this.setState({ employees: employeesOriginal, searchParam: \"\" })\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <Title><input type=\"text\" placeholder=\"Search\" onChange={this.handleSearch} /></Title>\n        <Wrapper>\n\n          <table >\n            <thead>\n              <tr>\n                <th>Image</th>\n                {/* SortName indicates symbol of the current sorting */}\n                <th onClick={this.handleSort}>Name <SortName status={this.state.sortColumn[0]} /></th>\n                <th onClick={this.handleSort}>Phone <SortName status={this.state.sortColumn[1]} /></th>\n                <th onClick={this.handleSort}>Email <SortName status={this.state.sortColumn[2]} /></th>\n                <th onClick={this.handleSort}>DOB <SortName status={this.state.sortColumn[3]} /></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.employees.map((employee, i) => (\n                <EmployeeItem\n                  employeeId={employee.id}\n                  image={employee.image}\n                  name={employee.name}\n                  phone={employee.phone}\n                  email={employee.email}\n                  dob={employee.dob}\n                  key={\"employee-\" + i}\n\n                />\n              ))}\n            </tbody>\n          </table>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","var faker = require('faker');\r\nvar moment = require('moment');\r\nmodule.exports = function populateTab() {\r\n    var employeesOriginal = [];\r\n    for (let i = 1; i < 25; i++) {\r\n// pulling 24 records name, email, phone, image url taken from faker.js\r\n// dob taken randomly between 18 and 65 years old currently\r\n        employeesOriginal.push({\r\n            id: i,\r\n            name: faker.name.findName(), \r\n            email: faker.internet.email(),  \r\n            phone: faker.phone.phoneNumberFormat(),\r\n            dob: moment().set({\r\n            'year':(moment().get('year')-Math.floor(Math.random()*47)-18),\r\n            'month':Math.floor(Math.random()*12), \r\n            'date':Math.floor(Math.random()*30)}).format(\"YYYY-MM-DD\"),\r\n            image: faker.random.image()\r\n        })\r\n        \r\n    }\r\n    return employeesOriginal\r\n}\r\n"],"sourceRoot":""}